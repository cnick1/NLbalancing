  % verification calculations for inputNormalTransformation
  %
  %  assumes v, w, and T are computed to degree 4, 4, and 3, respectively
  %  and that problem sizes are small enough so kronecker products can be
  %  taken.

  % verify T{1} satisfies the condition vec(I)' = v{2}'*(kron(T{1},T{1}))
  n = size(T{1},1);
  I = eye(n);
  fprintf('residual of the T1 equation is %g\n',norm(v{2}.'*kron(T{1},T{1})-I(:).'))
  

  % verification of the T{2} equation
  fprintf('residual of the T2 equation is %g\n', ...
    norm(v{2}.'*(kron(T{1},T{2})+kron(T{2},T{1})) + ...
         v{3}.'*kron(kron(T{1},T{1}),T{1})) )

  % verification of the T{3} equation
  fprintf('residual of the T3 equation is %g\n', ...
    norm(v{2}.'*(kron(T{1},T{3})+kron(T{2},T{2})+kron(T{3},T{1})) + ...
         v{3}.'*(kron(T{1},kron(T{1},T{2})) + kron(T{1},kron(T{2},T{1})) + ...
                 kron(T{2},kron(T{1},T{1}))) + ...
         v{4}.'*(kron(kron(kron(T{1},T{1}),T{1}),T{1}))        )  )

  % testing the calTTv routine
  fprintf('residual of calTTv is %g\n', ...
    norm( v{3}.'*(kron(T{1},kron(T{1},T{2})) + ...
           kron(T{1},kron(T{2},T{1})) + ...
           kron(T{2},kron(T{1},T{1})) ) - calTTv(T,3,4,v{3}).' ) )
         
  % testing the calTTv routine
  fprintf('residual of calTTv is %g\n', ...
    norm( kron(T{1}.',kron(T{1}.',T{1}.'))*v{3} - calTTv(T,3,3,v{3}) ) )
